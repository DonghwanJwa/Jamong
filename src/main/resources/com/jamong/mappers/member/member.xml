<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

<resultMap type="m" id="profileMap">
  <id column="mem_no" property="mem_no" />
  <result column="mem_id" property="mem_id" />
  <result column="mem_author" property="mem_author" />
  <result column="profile_photo" property="profile_photo" />
  <result column="profile_cont" property="profile_cont" />
  <result column="mem_nickname" property="mem_nickname" />
  <result column="mem_keyword" property="mem_keyword" />
  <result column="mem_portfolio" property="mem_portfolio" />
  
 <association javaType="b" property="boardVO">
 <id column="bo_no" property="bo_no" />
  <result column="bo_title" property="bo_title" />
  <result column="bo_subtitle" property="bo_subtitle" />
  <result column="bo_cont" property="bo_cont" />
  <result column="bo_thumbnail" property="bo_thumbnail" />
  <result column="bo_hit" property="bo_hit" />
  <result column="bo_date" property="bo_date" />
  <result column="bo_editdate" property="bo_editdate" />
  <result column="bo_lock" property="bo_lock" />
  <result column="bo_type" property="bo_type" />
  <result column="bo_like" property="bo_like" />
  <result column="book_order" property="book_order" />
  <result column="cat_no" property="cat_no" />
  <result column="mem_no" property="mem_no" />
  <result column="book_no" property="book_no" />
 </association>

 <association javaType="book" property="bookVO">
  <id column="book_no" property="book_no"/>
  <result column="book_name" property="book_name"/>
  <result column="book_date" property="book_date"/>
  <result column="book_editdate"  property="book_editdate"/>
  <result column="cat_no" property="cat_no"/>
  <result column="mem_no" property="mem_no"/>
 </association>
</resultMap>
<select id="mem_email" resultType="m">
	select * from member where email_id=#{email_id} and email_domain=#{email_domain}
</select>

	<!-- 회원정보 업데이트 -->
<update id="mem_update">
	update member set 
	mem_pwd=#{mem_pwd},mem_name=#{mem_name},
	mem_birth1=#{mem_birth1},mem_birth2=#{mem_birth2},mem_birth3=#{mem_birth3},
	email_id=#{email_id},email_domain=#{email_domain},
	mem_phone01=#{mem_phone01},mem_phone02=#{mem_phone02},mem_phone03=#{mem_phone03}
	where mem_no=#{mem_no}
</update>

   <!-- 회원정보가져오기 -->
<select id="mem_myinfo" resultType="m">
    select * from member where mem_id=#{mem_id}
</select>

 <!-- 아이디 중복체크 -->
 <select id="mem_idcheck" parameterType="String" resultType="m">
     select * from member where mem_id=#{mem_id} or mem_nickname=#{mem_id}
 </select>

 <!-- 회원가입 -->
 <insert id="mem_insert" parameterType="m">
     insert into member (mem_no,mem_id,mem_pwd,mem_name,mem_birth1,mem_birth2,mem_birth3,
     email_id,email_domain,mem_phone01,mem_phone02,mem_phone03,mem_gender,mem_date,profile_photo,
     profile_cont,mem_nickname,mem_fav1,mem_fav2,mem_fav3) 
     values (mem_no_seq.nextval,#{mem_id},#{mem_pwd},#{mem_name},#{mem_birth1},#{mem_birth2},
     #{mem_birth3},#{email_id},#{email_domain},#{mem_phone01},#{mem_phone02},#{mem_phone03},
     #{mem_gender},sysdate,#{profile_photo},#{profile_cont},#{mem_nickname},
     #{mem_fav1},#{mem_fav2},#{mem_fav3})
 </insert>
 
 <!-- 로그인 -->
 <select id="mem_logincheck" parameterType="String" resultType="m">
     select * from member where (mem_state=0 or mem_state=9) and  mem_id=#{mem_id}
 </select>
 
 <!-- admin 로그인 -->
 <select id="mem_adminlogin" parameterType="String" resultType="m">
     select * from member where mem_state=9 and  mem_id=#{mem_id}
 </select>
 
  <!-- 비번찾기=> 회원정보 검색 -->
<select id="mem_pwdck" resultType="m">
    select * from member where mem_id=#{mem_id}
</select>


<select id="mem_emailcheck" resultType="m">
    select * from member where email_id=#{email_id} and email_domain=#{email_domain}
</select>

     <!--회원 찾기 -->
<select id="profile_ck" resultMap="profileMap">
    SELECT m.mem_no,
    	m.mem_id, 
    	m.mem_author, 
    	m.profile_photo, 
    	m.profile_cont, 
    	m.mem_nickname, 
    	m.mem_keyword, 
    	m.mem_portfolio,
    	b.bo_no,
    	b.bo_title,
    	b.bo_subtitle,
    	b.bo_cont,
    	b.bo_thumbnail,
    	b.bo_hit,
    	b.bo_date,
    	b.bo_editdate,
    	b.bo_lock,
    	b.bo_type,
    	b.bo_like,
    	b.book_order,
    	b.cat_name,
    	b.mem_no,
    	b.book_no,
    	c.book_no,
    	c.book_name,
    	c.book_date,
    	c.book_editdate,
    	c.cat_no,
    	c.mem_no
    FROM member m
    LEFT OUTER JOIN (SELECT * FROM board ORDER BY bo_date DESC) b 
 	ON m.mem_no = b.mem_no
    LEFT OUTER JOIN (SELECT * FROM book ORDER BY book_date DESC) c
    ON m.mem_no = c.mem_no
    where m.mem_id = #{mem_id}
</select>
<!-- 
<update id="profile_up" >
     update member set  profile_photo=#{profile_photo}, profile_cont=#{profile_cont},
     mem_nickname=#{mem_nickname}, mem_keyword=#{mem_keyword}, mem_portfolio=#{mem_portfolio}
     where mem_no = #{mem_no}
</update>
 -->
 <select id="mem_getID" resultType="m">
  SELECT mem_id FROM member WHERE mem_no=#{mem_no}
 </select>
 
 <select id="index_author" resultType="m">
 <![CDATA[
  SELECT * 
  FROM (SELECT * FROM member where mem_state=0 ORDER BY DBMS_RANDOM.RANDOM) 
  WHERE rowNum <= 9
  ]]> 
 </select>
 
 <select id="cat_member" resultType="m">
 <![CDATA[
  SELECT * FROM (SELECT * FROM member ORDER BY DBMS_RANDOM.RANDOM) WHERE rowNum <= 4
  ]]> 
 </select>

</mapper>